{"name":"Model-driven Mobile Development","tagline":"Project Seminar MD² – Winter Term 2014/15","body":"### Cross-platform development of native business apps.\r\n\r\nMD² (or MD2) is an open source model-driven framework for cross-platform development of mobile applications. Based on a textual DSL, MD² generates runnable apps that can be run on the map.apps platform and that connect to one or more central Java EE backend servers. (MD² is furthermore intended to be able to generate native apps for mobile platforms such as Android or iOS. However, these generators are currently broken. Any help on reinstating these generators is most welcomed.)\r\n\r\nDuring winter term 2013/2014, a project seminar team of seven students enhanced the language and the map.apps and backend generators towards new features. This work was done in cooperation with the project seminar's industry partner, [con terra](http://www.conterra.de/). New features include, non-exhaustively: \r\n* Coarse-granular workflow functionality, with modular workflow elements,\r\n* Specification of workflows across apps,\r\n* Creating interfaces to the workflow, so that the workflow can be started from outside an app,\r\n* Calculation of location coordinates,\r\n* Uploading of images, and\r\n* Invocations of external web services\r\n\r\n### Project seminar results\r\n\r\nThe following final artifacts have been created by the project seminar:\r\n\r\n* Source code of the framework,\r\n* Tests, verifying the functionality of language features and the framework's validators,\r\n* Continuous integration server, based on Jenkins,\r\n* Documentation, directed individually at model developers as well as at framework developers, and\r\n* Sample applications, providing an additional entry point towards understanding the framework and its features' semantics.\r\n\r\n### Repository contents\r\n\r\n* [**md2-framework**](https://github.com/ps-md2/md2-framework): In the `mapapps` branch, this repository contains Eclipse projects for the development of the MD² language. Furthermore, this contains a projects for the tests (`de.wwu.md2.framework.tests`). All Eclipse projects relevant to development and testing are also Maven projects. The root Maven project that subsumes the others is `de.wwu.md2.framework.parent`.\r\n* [**md2-mapapps-runtime**](https://github.com/ps-md2/md2-mapapps-runtime): This repository contains the generic map.apps bundles that are required to run MD² map.apps apps. The bundles need to be copied into the `bundles/` folder of a map.apps installation, as described in the documentation.\r\n* [**md2-documentation**](https://github.com/ps-md2/md2-documentation): LaTeX project containing the user and developer documentation. Both are combined into one directory. A compiled snapshot PDF file resides at the root directory.\r\n* [**md2-projects**](https://github.com/ps-md2/md2-projects): This repository contains two example MD² projects. *CurrentStateProject* contains the example deficiency report use case that we have been discussing from the beginning. *DatingApp* serves as an additional use case, demonstrating further features of MD².\r\n* [**arbitrary-tools**](https://github.com/ps-md2/arbitrary-tools): Additional mini-projects of tools that have proven useful during our development. Nevertheless, they cannot be considered part of MD², since they do not contribute any functionality to the framework or any of the example projects.\r\n\r\n### Continuous integration\r\n\r\nOur continuous integration (CI) server is available at <http://psmd2.uni-muenster.de:8080/jenkins> from within the university's network. There, two jobs are created that both invoke the `de.wwu.md2.framework.parent` Maven project in order to execute the tests.\r\n\r\nThe two jobs differ in their triggering mechanism: One builds as soon as new commits are pushed to the `mapapps` branch. The other one builds for every pull request, as soon as one is created or new commits are added to an existing pull request. The pull request builder checks out a state in which the `mapapps` branch and the pull request's branch are merged. Consequently, the test result indicates whether an integration will be successful.\r\n\r\nUsing a Cronjob, both jobs poll the GitHub repository every five minutes to detect new changes.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}